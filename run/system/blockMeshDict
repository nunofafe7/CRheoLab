/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1;

  xmin 0.0;
  ymin 0.0;
  zmin 0.0;
  
  xmax 1.0;  
  ymax 1.0;
  zmax 0.1;

vertices
(
($xmin  $ymin  $zmin)
($xmax  $ymin  $zmin)  
($xmax  $ymax  $zmin)  
($xmin  $ymax  $zmin) 
($xmin  $ymin  $zmax)  
($xmax  $ymin  $zmax) 
($xmax  $ymax  $zmax)
($xmin  $ymax  $zmax)
);


blocks
(   
	 hex (0 1 2 3 4 5 6 7) (3 3 1) simpleGrading (1 1 1) 
);


edges
(

);

boundary
(
    top
    {
        type patch;
        faces
        (
            (3 7 6 2)  
        );
    }

    bottom
    {
        type patch;
        faces
        (
            (1 5 4 0)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (4 5 6 7)
            (0 1 2 3)  
        );
    }

   left
    {
        type patch;
        faces
        (
  	    	(0 4 7 3)
        );
    }

    right
    {
        type patch;
        faces
        (
            (1 5 6 2)
        );
    }





);

mergePatchPairs
(
);


/*
scale 1;

  xmin  0.0;
  ymin  0.0;
  zmin  0.0;

  ymed 3.0;
  
  xmax  3.0;
  xmax2 6.0;  
  ymax  6.0;
  zmax  1.0;

  vertices
(
    (0 0 0)
    (1 0 0)
    (0 1 0)
    (1 1 0)
    (5 1 0)
    (0 3 0)
    (1 3 0)
    (5 3 0)
    (0 0 1)
    (1 0 1)
    (0 1 1)
    (1 1 1)
    (5 1 1)
    (0 3 1)
    (1 3 1)
    (5 3 1)
);

blocks
(
    hex (0 1 3 2 8 9 11 10) (6 6 1) simpleGrading (1 1 1)
    hex (2 3 6 5 10 11 14 13) (6 10 1) simpleGrading (1 1 1)
    hex (3 4 7 6 11 12 15 14) (16 10 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 8 10 2)
            (2 10 13 5)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (4 7 15 12)
        );
    }
    bottom
    {
        type symmetryPlane;
        faces
        (
            (0 1 9 8)
        );
    }
    top
    {
        type symmetryPlane;
        faces
        (
            (5 13 14 6)
            (6 14 15 7)
        );
    }
    obstacle
    {
        type patch;
        faces
        (
            (1 3 11 9)
            (3 4 12 11)
        );
    }
);

mergePatchPairs
(
);
*/
// ************************************************************************* //
